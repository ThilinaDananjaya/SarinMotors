{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thilina Dananjaya\\\\Documents\\\\VSCode Projects\\\\GitHub\\\\SarinMotors\\\\Dashboard\\\\src\\\\Components\\\\create.customer.component.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport CustomersList from \"./customer-list.component\"; //validator\n\nimport SimpleReactValidator from \"simple-react-validator\"; //moment-date and time\n\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment().format();\nexport default class CreateCustomers extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeMobile = this.onChangeMobile.bind(this);\n    this.onChangeDob = this.onChangeDob.bind(this);\n    this.onSubmit = this.onSubmit.bind(this); //add validations\n\n    this.validator = new SimpleReactValidator();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      mobile: 0,\n      dob: new Date(),\n      customers: [],\n      date: moment().calendar()\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeMobile(e) {\n    this.setState({\n      mobile: e.target.value\n    });\n  }\n\n  onChangeDob(dob) {\n    this.setState({\n      dob: dob\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.validator.allValid()) {\n      alert(\"You submitted the form and stuff!\");\n      const customer = {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        mobile: this.state.mobile,\n        dob: this.state.dob\n      };\n      console.log(customer);\n      axios.post(\"http://localhost:5001/customers/add\", customer).then(res => console.log(res.data));\n    } else {\n      this.validator.showMessages(); // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n\n      this.forceUpdate();\n    }\n  } //     const customer={\n  //        username: this.state.username,\n  //        password:this.state.password,\n  //        email:this.state.email,\n  //        mobile:this.state.mobile,\n  //        dob:this.state.dob\n  // }\n  // console.log(customer);\n  // axios.post('http://localhost:5001/customers/add', customer)\n  // .then(res => console.log(res.data));\n  // this.setState({\n  //   username:'',\n  //   password:'',\n  //   email:'',\n  //   mobile:'',\n  //   dob:''\n  // })\n  // window.location.reload(false);\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3 border pt-5 pb-5 bg-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Username \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                className: \"form-control\",\n                value: this.state.username,\n                onChange: this.onChangeUsername,\n                onBlur: () => this.validator.showMessageFor(\"username\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), this.validator.message(\"username\", this.state.username, \"required|alpha\", {\n                className: \"text-danger\"\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                required: true,\n                className: \"form-control\",\n                value: this.state.password,\n                onChange: this.onChangePassword,\n                onBlur: () => this.validator.showMessageFor(\"password\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), this.validator.message(\"password\", this.state.password, \"required|alpha|max:8\", {\n                className: \"text-danger\"\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.email,\n                onChange: this.onChangeEmail,\n                onBlur: () => this.validator.showMessageFor(\"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), this.validator.message(\"email\", this.state.email, \"required|email\", {\n                className: \"text-danger\"\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Mobile \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.mobile,\n                onChange: this.onChangeMobile,\n                onBlur: () => this.validator.showMessageFor(\"mobile\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), this.validator.message(\"mobile\", this.state.mobile, \"required|phone|max:10\", {\n                className: \"text-danger\"\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date of birth \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: this.state.dob,\n                  onChange: this.onChangeDob\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), this.validator.message(\"dob\", this.state.dob, `required`, {\n                  className: \"text-danger\"\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Create Exercise Log\",\n                className: \"btn btn-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9 border bg-light\",\n          children: /*#__PURE__*/_jsxDEV(CustomersList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Thilina Dananjaya/Documents/VSCode Projects/GitHub/SarinMotors/Dashboard/src/Components/create.customer.component.js"],"names":["React","Component","axios","DatePicker","CustomersList","SimpleReactValidator","moment","format","CreateCustomers","constructor","props","onChangeUsername","bind","onChangePassword","onChangeEmail","onChangeMobile","onChangeDob","onSubmit","validator","state","username","password","email","mobile","dob","Date","customers","date","calendar","e","setState","target","value","preventDefault","allValid","alert","customer","console","log","post","then","res","data","showMessages","forceUpdate","render","showMessageFor","message","className"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AACAA,MAAM,GAAGC,MAAT;AAEA,eAAe,MAAMC,eAAN,SAA8BP,SAA9B,CAAwC;AACrDQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAhB,CARiB,CAUjB;;AACA,SAAKM,SAAL,GAAiB,IAAIb,oBAAJ,EAAjB;AAEA,SAAKc,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,MAAM,EAAE,CAJG;AAKXC,MAAAA,GAAG,EAAE,IAAIC,IAAJ,EALM;AAMXC,MAAAA,SAAS,EAAE,EANA;AAOXC,MAAAA,IAAI,EAAErB,MAAM,GAAGsB,QAAT;AAPK,KAAb;AASD;;AAEDjB,EAAAA,gBAAgB,CAACkB,CAAD,EAAI;AAClB,SAAKC,QAAL,CAAc;AACZV,MAAAA,QAAQ,EAAES,CAAC,CAACE,MAAF,CAASC;AADP,KAAd;AAGD;;AACDnB,EAAAA,gBAAgB,CAACgB,CAAD,EAAI;AAClB,SAAKC,QAAL,CAAc;AACZT,MAAAA,QAAQ,EAAEQ,CAAC,CAACE,MAAF,CAASC;AADP,KAAd;AAGD;;AACDlB,EAAAA,aAAa,CAACe,CAAD,EAAI;AACf,SAAKC,QAAL,CAAc;AACZR,MAAAA,KAAK,EAAEO,CAAC,CAACE,MAAF,CAASC;AADJ,KAAd;AAGD;;AACDjB,EAAAA,cAAc,CAACc,CAAD,EAAI;AAChB,SAAKC,QAAL,CAAc;AACZP,MAAAA,MAAM,EAAEM,CAAC,CAACE,MAAF,CAASC;AADL,KAAd;AAGD;;AACDhB,EAAAA,WAAW,CAACQ,GAAD,EAAM;AACf,SAAKM,QAAL,CAAc;AACZN,MAAAA,GAAG,EAAEA;AADO,KAAd;AAGD;;AAEDP,EAAAA,QAAQ,CAACY,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACI,cAAF;;AAEA,QAAI,KAAKf,SAAL,CAAegB,QAAf,EAAJ,EAA+B;AAC7BC,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACA,YAAMC,QAAQ,GAAG;AACfhB,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADN;AAEfC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAFN;AAGfC,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAHH;AAIfC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI,MAJJ;AAKfC,QAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWK;AALD,OAAjB;AAQAa,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAlC,MAAAA,KAAK,CACFqC,IADH,CACQ,qCADR,EAC+CH,QAD/C,EAEGI,IAFH,CAESC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB,CAFjB;AAGD,KAfD,MAeO;AACL,WAAKxB,SAAL,CAAeyB,YAAf,GADK,CAEL;AACA;;AACA,WAAKC,WAAL;AACD;AACF,GA3EoD,CA6ErD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,QAAQ,EAAE,KAAK5B,QAArB;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,EAAC,cAHZ;AAIE,gBAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,QAJpB;AAKE,gBAAA,QAAQ,EAAE,KAAKT,gBALjB;AAME,gBAAA,MAAM,EAAE,MAAM,KAAKO,SAAL,CAAe4B,cAAf,CAA8B,UAA9B;AANhB;AAAA;AAAA;AAAA;AAAA,sBAFF,EAUG,KAAK5B,SAAL,CAAe6B,OAAf,CACC,UADD,EAEC,KAAK5B,KAAL,CAAWC,QAFZ,EAGC,gBAHD,EAIC;AAAE4B,gBAAAA,SAAS,EAAE;AAAb,eAJD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAkBE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,QAAQ,MAFV;AAGE,gBAAA,SAAS,EAAC,cAHZ;AAIE,gBAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWE,QAJpB;AAKE,gBAAA,QAAQ,EAAE,KAAKR,gBALjB;AAME,gBAAA,MAAM,EAAE,MAAM,KAAKK,SAAL,CAAe4B,cAAf,CAA8B,UAA9B;AANhB;AAAA;AAAA;AAAA;AAAA,sBAFF,EAWG,KAAK5B,SAAL,CAAe6B,OAAf,CACC,UADD,EAEC,KAAK5B,KAAL,CAAWE,QAFZ,EAGC,sBAHD,EAIC;AAAE2B,gBAAAA,SAAS,EAAE;AAAb,eAJD,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAoCE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWG,KAHpB;AAIE,gBAAA,QAAQ,EAAE,KAAKR,aAJjB;AAKE,gBAAA,MAAM,EAAE,MAAM,KAAKI,SAAL,CAAe4B,cAAf,CAA8B,OAA9B;AALhB;AAAA;AAAA;AAAA;AAAA,sBAFF,EASG,KAAK5B,SAAL,CAAe6B,OAAf,CACC,OADD,EAEC,KAAK5B,KAAL,CAAWG,KAFZ,EAGC,gBAHD,EAIC;AAAE0B,gBAAAA,SAAS,EAAE;AAAb,eAJD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCF,eAoDE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWI,MAHpB;AAIE,gBAAA,QAAQ,EAAE,KAAKR,cAJjB;AAKE,gBAAA,MAAM,EAAE,MAAM,KAAKG,SAAL,CAAe4B,cAAf,CAA8B,QAA9B;AALhB;AAAA;AAAA;AAAA;AAAA,sBAFF,EASG,KAAK5B,SAAL,CAAe6B,OAAf,CACC,QADD,EAEC,KAAK5B,KAAL,CAAWI,MAFZ,EAGC,uBAHD,EAIC;AAAEyB,gBAAAA,SAAS,EAAE;AAAb,eAJD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,oBApDF,eAoEE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,wCACE,QAAC,UAAD;AACE,kBAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWK,GADvB;AAEE,kBAAA,QAAQ,EAAE,KAAKR;AAFjB;AAAA;AAAA;AAAA;AAAA,wBADF,EAKG,KAAKE,SAAL,CAAe6B,OAAf,CAAuB,KAAvB,EAA8B,KAAK5B,KAAL,CAAWK,GAAzC,EAA+C,UAA/C,EAA0D;AACzDwB,kBAAAA,SAAS,EAAE;AAD8C,iBAA1D,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBApEF,eAgFE;AAAA;AAAA;AAAA;AAAA,oBAhFF,eAkFE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,KAAK,EAAC,qBAFR;AAGE,gBAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAlFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA+FE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA/FF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAuGD;;AA5MoD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport CustomersList from \"./customer-list.component\";\n//validator\nimport SimpleReactValidator from \"simple-react-validator\";\n//moment-date and time\nimport moment from \"moment\";\nmoment().format();\n\nexport default class CreateCustomers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeMobile = this.onChangeMobile.bind(this);\n    this.onChangeDob = this.onChangeDob.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    //add validations\n    this.validator = new SimpleReactValidator();\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      mobile: 0,\n      dob: new Date(),\n      customers: [],\n      date: moment().calendar(),\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n  onChangeMobile(e) {\n    this.setState({\n      mobile: e.target.value,\n    });\n  }\n  onChangeDob(dob) {\n    this.setState({\n      dob: dob,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.validator.allValid()) {\n      alert(\"You submitted the form and stuff!\");\n      const customer = {\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        mobile: this.state.mobile,\n        dob: this.state.dob,\n      };\n\n      console.log(customer);\n\n      axios\n        .post(\"http://localhost:5001/customers/add\", customer)\n        .then((res) => console.log(res.data));\n    } else {\n      this.validator.showMessages();\n      // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n      this.forceUpdate();\n    }\n  }\n\n  //     const customer={\n  //        username: this.state.username,\n  //        password:this.state.password,\n  //        email:this.state.email,\n  //        mobile:this.state.mobile,\n  //        dob:this.state.dob\n  // }\n\n  // console.log(customer);\n\n  // axios.post('http://localhost:5001/customers/add', customer)\n  // .then(res => console.log(res.data));\n\n  // this.setState({\n  //   username:'',\n  //   password:'',\n  //   email:'',\n  //   mobile:'',\n  //   dob:''\n  // })\n\n  // window.location.reload(false);\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3 border pt-5 pb-5 bg-light\">\n            <h3>Add Customer</h3>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label>Username </label>\n                <input\n                  type=\"text\"\n                  required\n                  className=\"form-control\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  onBlur={() => this.validator.showMessageFor(\"username\")}\n                />\n                {this.validator.message(\n                  \"username\",\n                  this.state.username,\n                  \"required|alpha\",\n                  { className: \"text-danger\" }\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Password </label>\n                <input\n                  type=\"password\"\n                  required\n                  className=\"form-control\"\n                  value={this.state.password}\n                  onChange={this.onChangePassword}\n                  onBlur={() => this.validator.showMessageFor(\"password\")}\n                />\n\n                {this.validator.message(\n                  \"password\",\n                  this.state.password,\n                  \"required|alpha|max:8\",\n                  { className: \"text-danger\" }\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Email </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.email}\n                  onChange={this.onChangeEmail}\n                  onBlur={() => this.validator.showMessageFor(\"email\")}\n                />\n                {this.validator.message(\n                  \"email\",\n                  this.state.email,\n                  \"required|email\",\n                  { className: \"text-danger\" }\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Mobile </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.mobile}\n                  onChange={this.onChangeMobile}\n                  onBlur={() => this.validator.showMessageFor(\"mobile\")}\n                />\n                {this.validator.message(\n                  \"mobile\",\n                  this.state.mobile,\n                  \"required|phone|max:10\",\n                  { className: \"text-danger\" }\n                )}\n              </div>\n              <div className=\"form-group\">\n                <label>Date of birth </label>\n                <div>\n                  <DatePicker\n                    selected={this.state.dob}\n                    onChange={this.onChangeDob}\n                  />\n                  {this.validator.message(\"dob\", this.state.dob, `required`, {\n                    className: \"text-danger\",\n                  })}\n                </div>\n              </div>\n              <br></br>\n\n              <div className=\"form-group\">\n                <input\n                  type=\"submit\"\n                  value=\"Create Exercise Log\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n            </form>\n          </div>\n\n          <div className=\"col-9 border bg-light\">\n            <CustomersList />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}