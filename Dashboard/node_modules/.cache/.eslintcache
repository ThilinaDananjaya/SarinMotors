[{"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\index.js":"1","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\App.js":"2","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\user-list.component.js":"3","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\edit-user.component.js":"4","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-shipper.component.js":"5","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\navbar.component.js":"6","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\usertype-list.component.js":"7","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create.customer.component.js":"8","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-user.component.js":"9","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-agent.component.js":"10","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\addStock-component.js":"11","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-usertype.component.js":"12","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-customclearance.component.js":"13","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-order.component.js":"14","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\customer-list.component.js":"15","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\shipper-list.component.js":"16","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\customclearance-list.component.js":"17","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\agent-list.component.js":"18","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\order.list.component.js":"19"},{"size":385,"mtime":1623085085011,"results":"20","hashOfConfig":"21"},{"size":1891,"mtime":1623136277049,"results":"22","hashOfConfig":"21"},{"size":2107,"mtime":1623092220325,"results":"23","hashOfConfig":"21"},{"size":3585,"mtime":1623092196177,"results":"24","hashOfConfig":"21"},{"size":3689,"mtime":1623092158115,"results":"25","hashOfConfig":"21"},{"size":1448,"mtime":1623092200095,"results":"26","hashOfConfig":"21"},{"size":1941,"mtime":1623092223904,"results":"27","hashOfConfig":"21"},{"size":6251,"mtime":1623092172768,"results":"28","hashOfConfig":"21"},{"size":4481,"mtime":1623092163048,"results":"29","hashOfConfig":"21"},{"size":4015,"mtime":1623092139261,"results":"30","hashOfConfig":"21"},{"size":4547,"mtime":1623092094643,"results":"31","hashOfConfig":"21"},{"size":2950,"mtime":1623092168164,"results":"32","hashOfConfig":"21"},{"size":5548,"mtime":1623092145185,"results":"33","hashOfConfig":"21"},{"size":10272,"mtime":1623092152574,"results":"34","hashOfConfig":"21"},{"size":1932,"mtime":1623092184148,"results":"35","hashOfConfig":"21"},{"size":2065,"mtime":1623092207669,"results":"36","hashOfConfig":"21"},{"size":2924,"mtime":1623092176842,"results":"37","hashOfConfig":"21"},{"size":2731,"mtime":1623092123882,"results":"38","hashOfConfig":"21"},{"size":2651,"mtime":1623092203829,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9j23m9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\index.js",[],["88","89"],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\App.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\user-list.component.js",["90"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst User = (props) => (\n  <tr>\n    <td>{props.user.usertypeId}</td>\n    <td>{props.user.username}</td>\n    <td>{props.user.email}</td>\n    <td>{props.user.mobile}</td>\n    <td>\n      <Link className=\"btn btn-warning\" to={\"/edit/\" + props.user.id}>\n        edit\n      </Link>{\" \"}\n      |{\" \"}\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          props.deleteUser(props.user._id);\n        }}\n      >\n        {\" \"}\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class UsersList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteUser = this.deleteUser.bind(this);\n\n    this.state = { users: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/users/\")\n      .then((response) => {\n        this.setState({ users: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteUser(id) {\n    axios.delete(\"http://localhost:5001/users/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      users: this.state.users.filter((el) => el._id !== id),\n    });\n  }\n  usersList() {\n    return this.state.users.map((currentuser) => {\n      return (\n        <User\n          user={currentuser}\n          deleteUser={this.deleteUser}\n          key={currentuser._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container pt-5 pb-5 \">\n        <div className=\"\">\n          <h3>Users</h3>\n        </div>\n        <div>\n          <table className=\"table  table-boarded table-striped table-dark\">\n            <thead className=\"thead-light\">\n              <tr className=\"\">\n                <th>User type</th>\n                <th>User name</th>\n\n                <th>Email</th>\n                <th>Mobile</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.usersList()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\edit-user.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-shipper.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\navbar.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\usertype-list.component.js",["91"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst UserType = (props) => (\n  <tr>\n    <td>{props.usertype.usertypeId}</td>\n    <td>{props.usertype.usertypeName}</td>\n\n    <td>\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          props.deleteUserType(props.usertype._id);\n        }}\n      >\n        {\" \"}\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class UserTypesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteUserType = this.deleteUserType.bind(this);\n\n    this.state = { usertypes: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/usertypes/\")\n      .then((response) => {\n        this.setState({ usertypes: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteUserType(id) {\n    axios.delete(\"http://localhost:5001/usertypes/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      usertypes: this.state.usertypes.filter((el) => el._id !== id),\n    });\n  }\n  userTypesList() {\n    return this.state.usertypes.map((currentusertype) => {\n      return (\n        <UserType\n          usertype={currentusertype}\n          deleteUserType={this.deleteUserType}\n          key={currentusertype._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container pt-5 pb-5\">\n        <div className=\"pl-2\">\n          <h3>User Types</h3>\n        </div>\n        <div>\n          <table className=\"table table-boarded table-striped table-dark\">\n            <thead className=\"thead-light\">\n              <tr className=\"\">\n                <th>Usertype ID</th>\n                <th>User type name</th>\n\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.userTypesList()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create.customer.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-user.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-agent.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\addStock-component.js",["92","93"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport swal from \"sweetalert\";\n\nexport default class AddStock extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeVehicleId = this.onChangeVehicleId.bind(this);\n    this.onChangeMarketPrice = this.onChangeMarketPrice.bind(this);\n    this.onChangeOrderId = this.onChangeOrderId.bind(this);\n    this.onChangeModelName = this.onChangeModelName.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      vehicleId: \"\",\n      marketPrice: 0,\n      orderId: \"\",\n      modelName: \"\",\n\n      orders: [],\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5001/orders/\").then((Response) => {\n      if (Response.data.length > 0) {\n        this.setState({\n          orders: Response.data.map((orderId) => orderId.orderId),\n          orderId: Response.data[0].orderId,\n        });\n      }\n    });\n  }\n\n  onChangeVehicleId(e) {\n    this.setState({\n      vehicleId: e.target.value,\n    });\n  }\n\n  onChangeMarketPrice(e) {\n    this.setState({\n      marketPrice: e.target.value,\n    });\n  }\n  onChangeOrderId(e) {\n    this.setState({\n      orderId: e.target.value,\n    });\n  }\n  onChangeModelName(e) {\n    this.setState({\n      modelName: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const Vehicle = {\n      vehicleId: this.state.vehicleId,\n      marketPrice: this.state.marketPrice,\n      orderId: this.state.orderId,\n      modelName: this.state.modelName,\n    };\n\n    console.log(Vehicle);\n\n    axios\n      .post(\"http://localhost:5001/stocks/add\", Vehicle)\n      .then((res) => console.log(res.data))\n      .catch((error) => {\n        console.log(error.response);\n      });\n\n    console.log(\"ADDED VEHICLE\");\n\n    this.setState({\n      vehicleId: \"\",\n      marketPrice: \"\",\n      orderId: \"\",\n      modelName: \"\",\n    });\n\n    //     swal(\"Add new orderId?\")\n    //     .then((value) => {\n    //       document.location.reload();\n    // });\n  }\n\n  render() {\n    return (\n      //adding a modal\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4 bg-light border pt-5 pb-5  \">\n            <h3>Add Vehicles to stock</h3>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label>Vehicle Id</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.vehicleId}\n                  onChange={this.onChangeVehicleId}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-control-label\">Market Price</label>\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">Rs.</div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.marketPrice}\n                    onChange={this.onChangeMarketPrice}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Order Id </label>\n                <select\n                  ref=\"userInput\"\n                  required\n                  className=\"form-control\"\n                  value={this.state.orderId}\n                  onChange={this.onChangeOrderId}\n                >\n                  {this.state.orders.map(function (orderId) {\n                    return (\n                      <option key={orderId} value={orderId}>\n                        {orderId}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Model Name </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.modelName}\n                  onChange={this.onChangeModelName}\n                />\n              </div>\n\n              <br></br>\n\n              <div className=\"form-group\">\n                <input\n                  type=\"submit\"\n                  value=\"Add vehicle\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-usertype.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-customclearance.component.js",[],"C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\create-order.component.js",["94"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport OrdersList from \"./order.list.component\";\nimport swal from \"sweetalert\";\n\nexport default class CreateOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeOrderId = this.onChangeOrderId.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangePayment = this.onChangePayment.bind(this);\n    this.onChangeAgent = this.onChangeAgent.bind(this);\n    this.onChangeShipper = this.onChangeShipper.bind(this);\n    this.onChangeUser = this.onChangeUser.bind(this);\n    this.onChangeCustomer = this.onChangeCustomer.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      orderId: \"\",\n      date: new Date(),\n      payment: 0,\n      agent: \"\",\n      shipper: \"\",\n      user: \"\",\n      customer: \"\",\n\n      agents: [],\n      shippers: [],\n      customers: [],\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5001/users/\").then((Response) => {\n      if (Response.data.length > 0) {\n        this.setState({\n          users: Response.data.map((user) => user.username),\n          username: Response.data[0].username,\n        });\n      }\n    });\n\n    axios.get(\"http://localhost:5001/agents/\").then((Response) => {\n      if (Response.data.length > 0) {\n        this.setState({\n          agents: Response.data.map((agent) => agent.agentName),\n          agentName: Response.data[0].agentName,\n        });\n      }\n    });\n\n    axios.get(\"http://localhost:5001/shippers/\").then((Response) => {\n      if (Response.data.length > 0) {\n        this.setState({\n          shippers: Response.data.map((shipper) => shipper.shipperName),\n          shipperName: Response.data[0].shipperName,\n        });\n      }\n    });\n    axios.get(\"http://localhost:5001/customers/\").then((Response) => {\n      if (Response.data.length > 0) {\n        this.setState({\n          customers: Response.data.map((customer) => customer.username),\n          username: Response.data[0].username,\n        });\n      }\n    });\n  }\n\n  onChangeOrderId(e) {\n    this.setState({\n      orderId: e.target.value,\n    });\n  }\n  onChangeDate(date) {\n    this.setState({\n      date: date,\n    });\n  }\n  onChangePayment(e) {\n    this.setState({\n      payment: e.target.value,\n    });\n  }\n  onChangeAgent(e) {\n    this.setState({\n      agent: e.target.value,\n    });\n  }\n  onChangeShipper(e) {\n    this.setState({\n      shipper: e.target.value,\n    });\n  }\n\n  onChangeUser(e) {\n    this.setState({\n      user: e.target.value,\n    });\n  }\n  onChangeCustomer(e) {\n    this.setState({\n      customer: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const order = {\n      orderId: this.state.orderId,\n      date: this.state.date,\n      payment: this.state.payment,\n      agent: this.state.agent,\n      shipper: this.state.shipper,\n      user: this.state.user,\n      customer: this.state.customer,\n    };\n\n    console.log(order);\n\n    axios\n      .post(\"http://localhost:5001/orders/add\", order)\n      .then((res) => console.log(res.data))\n      .catch((error) => {\n        console.log(error.response);\n      });\n\n    this.setState({\n      orderId: \"\",\n      payment: \"\",\n      agent: \"\",\n      shipper: \"\",\n      user: \"\",\n      customer: \"\",\n    });\n\n    swal(\"Add new agent?\").then((value) => {\n      document.location.reload();\n    });\n  }\n\n  myFunction() {\n    // Get the checkbox\n    var checkBox = document.getElementById(\"confirm-customer\");\n    // Get the output text\n    var text = document.getElementById(\"mytext\");\n\n    // If the checkbox is checked, display the output text\n    if (checkBox.checked == true) {\n      text.disabled = false;\n    } else {\n      text.disabled = true;\n    }\n  }\n\n  render() {\n    return (\n      //adding a modal\n      <div className=\"container\">\n        <div className=\"row\">\n          <section className=\"col-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary float-right\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#exampleModal\"\n            >\n              More Info\n            </button>\n\n            <div\n              className=\"modal fade\"\n              id=\"exampleModal\"\n              tabIndex=\"-1\"\n              aria-labelledby=\"exampleModalLabel\"\n              aria-hidden=\"true\"\n            >\n              <div className=\"modal-dialog\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                      Customized Vehicle Orders\n                    </h5>\n                    <button\n                      type=\"button\"\n                      className=\"btn-close\"\n                      data-bs-dismiss=\"modal\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                  <div className=\"modal-body\">\n                    <p>\n                      If the order is placed by a customer put a tick on and\n                      select the customer from dropdown.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-4 bg-light border pt-5 pb-5  \">\n            <h3>Add Vehicle Order</h3>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <label>Order ID </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.orderId}\n                  onChange={this.onChangeOrderId}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>Date: </label>\n                <div>\n                  <DatePicker\n                    selected={this.state.date}\n                    onChange={this.onChangeDate}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label className=\"form-control-label\">Payment</label>\n                <div className=\"input-group\">\n                  <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">Rs.</div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.payment}\n                    onChange={this.onChangePayment}\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Agent </label>\n                <select\n                  ref=\"userInput\"\n                  required\n                  className=\"form-control\"\n                  value={this.state.agent}\n                  onChange={this.onChangeAgent}\n                >\n                  {this.state.agents.map(function (agent) {\n                    return (\n                      <option key={agent} value={agent}>\n                        {agent}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Shipper </label>\n                <select\n                  ref=\"userInput\"\n                  required\n                  className=\"form-control\"\n                  value={this.state.shipper}\n                  onChange={this.onChangeShipper}\n                >\n                  {this.state.shippers.map(function (shipper) {\n                    return (\n                      <option key={shipper} value={shipper}>\n                        {shipper}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Manager </label>\n                <select\n                  ref=\"userInput\"\n                  required\n                  className=\"form-control\"\n                  value={this.state.user}\n                  onChange={this.onChangeUser}\n                >\n                  {this.state.users.map(function (user) {\n                    return (\n                      <option key={user} value={user}>\n                        {user}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Customer </label>\n                <div className=\"input-group\">\n                  {/* adding a checkbox */}\n                  <div className=\"input-group-prepend\">\n                    <div className=\"input-group-text\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"confirm-customer\"\n                        onClick={this.myFunction}\n                        area-label=\"checkbox for customized vehicle order\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <select\n                    ref=\"userInput\"\n                    disabled\n                    id=\"mytext\"\n                    className=\"form-control\"\n                    value={this.state.customer}\n                    onChange={this.onChangeCustomer}\n                  >\n                    {this.state.customers.map(function (customer) {\n                      return (\n                        <option key={customer} value={customer}>\n                          {customer}\n                        </option>\n                      );\n                    })}\n                  </select>\n                </div>\n              </div>\n\n              <br></br>\n\n              <div className=\"form-group\">\n                <input\n                  type=\"submit\"\n                  value=\"Create Order\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n            </form>\n          </div>\n\n          <div className=\"col-8 bg-light pt-5 pb-5 border\">\n            <OrdersList />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\customer-list.component.js",["95"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Customer = (props) => (\n  <tr>\n    <td>{props.customer.username}</td>\n\n    <td>{props.customer.email}</td>\n    <td>{props.customer.mobile}</td>\n    <td>{props.customer.dob.substring(0, 10)}</td>\n    <td>\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          props.deleteCustomer(props.customer._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class CustomersList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteCustomer = this.deleteCustomer.bind(this);\n\n    this.state = { customers: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/customers/\")\n      .then((response) => {\n        this.setState({ customers: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteCustomer(id) {\n    axios.delete(\"http://localhost:5001/customers/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      customers: this.state.customers.filter((el) => el._id !== id),\n    });\n  }\n\n  customersList() {\n    return this.state.customers.map((currentcustomer) => {\n      return (\n        <Customer\n          customer={currentcustomer}\n          deleteCustomer={this.deleteCustomer}\n          key={currentcustomer._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <h3>Customers List</h3>\n        <table className=\"table table-striped table-dark table-boarded\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Customer name</th>\n\n              <th>Email</th>\n              <th>Mobile</th>\n              <th>DOB</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.customersList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\shipper-list.component.js",["96"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Shipper = (props) => (\n  <tr>\n    <td>{props.shipper.shipperId}</td>\n    <td>{props.shipper.shipperName}</td>\n    <td>{props.shipper.email}</td>\n    <td>{props.shipper.mobile}</td>\n\n    <td>\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          props.deleteShipper(props.shipper._id);\n        }}\n      >\n        {\" \"}\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class ShipperList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteShipper = this.deleteShipper.bind(this);\n\n    this.state = { shippers: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/shippers/\")\n      .then((response) => {\n        this.setState({ shippers: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteShipper(id) {\n    axios.delete(\"http://localhost:5001/shippers/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      shippers: this.state.shippers.filter((el) => el._id !== id),\n    });\n  }\n  shipperList() {\n    return this.state.shippers.map((currentshipper) => {\n      return (\n        <Shipper\n          shipper={currentshipper}\n          deleteShipper={this.deleteShipper}\n          key={currentshipper._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container pt-5 pb-5\">\n        <div className=\"pl-2\">\n          <h3 className=\"text-primary\">Shipper</h3>\n        </div>\n        <div>\n          <table className=\"table table-boarded table-striped table-dark\">\n            <thead className=\"thead-light\">\n              <tr className=\" \">\n                <th>Shipper ID</th>\n                <th>Shipper Name</th>\n                <th>Email</th>\n                <th>Mobile</th>\n\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.shipperList()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\customclearance-list.component.js",["97","98","99"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nconst CustomClearance = (props) => (\n  <tr>\n    <td>{props.customclearance.orderId}</td>\n    <td>{props.customclearance.date.substring(0, 10)}</td>\n    <td>{props.customclearance.customPayment}</td>\n    <td>{props.customclearance.transportPayment}</td>\n    <td>{props.customclearance.user}</td>\n\n    <td>\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          }).then((willDelete) => {\n            if (willDelete) {\n              {\n                props.deleteCustomClearance(props.customclearance._id);\n              }\n              swal(\"Poof! Your imaginary file has been deleted!\", {\n                icon: \"success\",\n              });\n            } else {\n              swal(\"Your imaginary file is safe!\");\n            }\n          });\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class CustomClearanceList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteCustomClearance = this.deleteCustomClearance.bind(this);\n\n    this.state = { customclearances: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/customclearances/\")\n      .then((response) => {\n        this.setState({ customclearances: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteCustomClearance(id) {\n    axios\n      .delete(\"http://localhost:5001/customclearances/\" + id)\n      .then((response) => {\n        console.log(response.data);\n      });\n\n    this.setState({\n      customclearances: this.state.customclearances.filter(\n        (el) => el._id !== id\n      ),\n    });\n  }\n\n  receivingsList() {\n    return this.state.customclearances.map((currentcustomclearance) => {\n      return (\n        <CustomClearance\n          customclearance={currentcustomclearance}\n          deleteCustomClearance={this.deleteCustomClearance}\n          key={currentcustomclearance._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container border  pt-5 pb-5\">\n        <h3>Vehicle Receivings</h3>\n        <table className=\"table table-striped table-dark table-boarded\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>CustomClearance ID</th>\n              <th>Date</th>\n              <th>Custom Clearance Payment</th>\n              <th>Tavel payments</th>\n              <th>Sales Person</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.receivingsList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\agent-list.component.js",["100","101"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\n\nconst Agent = (props) => (\n  <tr>\n    <td>{props.agent.agentId}</td>\n    <td>{props.agent.agentName}</td>\n    <td>{props.agent.email}</td>\n    <td>{props.agent.mobile}</td>\n\n    <td>\n      {/* <a className=\"btn btn-danger\" href=\"#\" onClick={()=>{props.deleteAgent(props.agent._id) }}> delete</a>  */}\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          }).then((willDelete) => {\n            if (willDelete) {\n              {\n                props.deleteAgent(props.agent._id);\n              }\n              swal(\"Poof! Your imaginary file has been deleted!\", {\n                icon: \"success\",\n              });\n            } else {\n              swal(\"Your imaginary file is safe!\");\n            }\n          });\n        }}\n      >\n        {\" \"}\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class AgentList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteAgent = this.deleteAgent.bind(this);\n\n    this.state = { agents: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/agents/\")\n      .then((response) => {\n        this.setState({ agents: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteAgent(id) {\n    axios.delete(\"http://localhost:5001/agents/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      agents: this.state.agents.filter((el) => el._id !== id),\n    });\n  }\n  agentsList() {\n    return this.state.agents.map((currentagent) => {\n      return (\n        <Agent\n          agent={currentagent}\n          deleteAgent={this.deleteAgent}\n          key={currentagent._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container border  pt-5 pb-5\">\n        <div className=\"pl-2\">\n          <h3 className=\"text-primary\">Agents</h3>\n          <br></br>\n        </div>\n        <div>\n          <table className=\"table table-boarded table-striped table-dark\">\n            <thead className=\"thead-light\">\n              <tr className=\"\">\n                <th>Agent ID</th>\n                <th>Agent Name</th>\n                <th>Email</th>\n                <th>Mobile</th>\n\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>{this.agentsList()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Thilina Dananjaya\\Documents\\VSCode Projects\\GitHub\\SarinMotors\\Dashboard\\src\\Components\\order.list.component.js",["102","103","104"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nconst Order = (props) => (\n  <tr>\n    <td>{props.order.orderId}</td>\n    <td>{props.order.date.substring(0, 10)}</td>\n    <td>{props.order.payment}</td>\n    <td>{props.order.agent}</td>\n    <td>{props.order.shipper}</td>\n    <td>{props.order.user}</td>\n    <td>{props.order.customer}</td>\n\n    <td>\n      <a\n        className=\"btn btn-danger\"\n        href=\"#\"\n        onClick={() => {\n          swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          }).then((willDelete) => {\n            if (willDelete) {\n              {\n                props.deleteOrder(props.order._id);\n              }\n              swal(\"Poof! Your imaginary file has been deleted!\", {\n                icon: \"success\",\n              });\n            } else {\n              swal(\"Your imaginary file is safe!\");\n            }\n          });\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\n\nexport default class OrdersList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteOrder = this.deleteOrder.bind(this);\n\n    this.state = { orders: [] };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5001/orders/\")\n      .then((response) => {\n        this.setState({ orders: response.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  deleteOrder(id) {\n    axios.delete(\"http://localhost:5001/orders/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      orders: this.state.orders.filter((el) => el._id !== id),\n    });\n  }\n\n  ordersList() {\n    return this.state.orders.map((currentorder) => {\n      return (\n        <Order\n          order={currentorder}\n          deleteOrder={this.deleteOrder}\n          key={currentorder._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Orders List</h3>\n        <table className=\"table table-striped table-dark table-boarded\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Order ID</th>\n              <th>Date</th>\n              <th>Payment</th>\n              <th>Agent</th>\n              <th>Shipper</th>\n              <th>Manager</th>\n              <th>Customer</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.ordersList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":16,"column":7,"nodeType":"111","endLine":22,"endColumn":8},{"ruleId":"109","severity":1,"message":"110","line":10,"column":7,"nodeType":"111","endLine":16,"endColumn":8},{"ruleId":"112","severity":1,"message":"113","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":18},{"ruleId":"112","severity":1,"message":"116","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":12},{"ruleId":"117","severity":1,"message":"118","line":154,"column":26,"nodeType":"119","messageId":"120","endLine":154,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":12,"column":7,"nodeType":"111","endLine":18,"endColumn":8},{"ruleId":"109","severity":1,"message":"110","line":12,"column":7,"nodeType":"111","endLine":18,"endColumn":8},{"ruleId":"112","severity":1,"message":"121","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":15,"column":7,"nodeType":"111","endLine":38,"endColumn":8},{"ruleId":"122","severity":1,"message":"123","line":27,"column":15,"nodeType":"124","messageId":"125","endLine":29,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":14,"column":7,"nodeType":"111","endLine":37,"endColumn":8},{"ruleId":"122","severity":1,"message":"123","line":26,"column":15,"nodeType":"124","messageId":"125","endLine":28,"endColumn":16},{"ruleId":"112","severity":1,"message":"121","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":16,"column":7,"nodeType":"111","endLine":39,"endColumn":8},{"ruleId":"122","severity":1,"message":"123","line":28,"column":15,"nodeType":"124","messageId":"125","endLine":30,"endColumn":16},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'DatePicker' is defined but never used.","Identifier","unusedVar","'swal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]